#!/bin/bash
e='echo -e'
b=`basename $0`
ROOT_DIR=${ROOT_DIR:-/}

fail_exit() {
  $e "$1"
  exit 1
}

if [ -r /etc/pkgman.conf ]; then
  . /etc/pkgman.conf
else
  fail_exit "${b}:  configuration file /etc/pkgman.conf not readable, exit!"
fi

TRGT="${ROOT_DIR}${PKG_O}"

if [ ! $1 ]; then
  $e "\033[1;33mUsage:\033[0;0m $b PKGINFILE [&]

where,
  PKGINFILE = file(s) with list of installed files in form \"find .\"
              (e.g. installed with \"pkg_in\")
  & = set to background mode

Allow variable:
  PKG_O = directory, where storing removed package's info (default \"$PKG_O\")
  ROOT_DIR = target directory with installed files (default is \"$ROOT_DIR\")

------------------------------------------
Simple packages remover for (B)LFS systems
* $b provided without implied warranty"
  exit 1
fi

if [ ! -r "$TRGT" ] ; then
  mkdir -p "$TRGT" || fail_exit \
   "${b}:  no access for creating directory \"$TRGT\", exit!"
elif [ ! -w "$TRGT" ] ; then
  fail_exit "${b}:  no write access for target directory \"$TRGT\", exit!"
fi

for p in "$@" ; do
  if [ ! -r "$p" ] ; then
    $e "${b}:  not found \"$p\", skip"
  else
    ( cd "$ROOT_DIR"
    L=`basename ${p}`
    
    if [ -f ${p}.out ]; then
      mv -f ${p}.out "$TRGT" &>/dev/null || fail_exit \
       "${b}:  cannot save .out script (permission denied?), exit!"
    fi
    if [ -f ${p}.in ]; then
      mv -f ${p}.in "$TRGT" &>/dev/null || fail_exit \
       "${b}:  cannot save .in script (permission denied?), exit!"
    fi
    
    if [ -f ${p}*.log.* ]; then
      mv -f ${p}*.log.* "$TRGT" &>/dev/null
    fi
    
    $e -n "${b}:  removing `basename "$p"` ..."
    p_lst="$(< $p)"
    $e -n " files ..."
    for target in $p_lst; do
      if [ ! -d "$target" ] || [ -L "$target" ]; then
        rm -f "$target" &>/dev/null
      fi
    done
    $e -n " dirs ..."
    for target in $p_lst; do
      if [ -d "$target" ]; then
        rmdir -p "$target" &>/dev/null
      fi
    done
    mv -f "$p" "$TRGT" &>/dev/null || fail_exit \
     "\n${b}:  cannot save PKGINFILE (permission denied?), exit!"
    $e "\033[1;32m done\033[0;0m"
    
    if [ -f $TRGT/${L}.out ]; then
      sh $TRGT/${L}.out
    fi )
  fi
done
